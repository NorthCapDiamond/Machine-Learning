import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA

"""

PART2
Star this repository on GitHub if you like it (or use it))))

docs: https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html

"""
score_matrix = pd.read_csv(
    "https://courses.openedu.ru/assets/courseware/v1/ee3345b3500b7571a589d3caa49ec743/asset-v1:ITMOUniversity+MLDATAN+spring_2023_ITMO_bac+type@asset+block/X_reduced_417.csv", header=None, delimiter=';')
weight_matrix = pd.read_csv(
    "https://courses.openedu.ru/assets/courseware/v1/ad22c96aa75c298f81ec21de6f334865/asset-v1:ITMOUniversity+MLDATAN+spring_2023_ITMO_bac+type@asset+block/X_loadings_417.csv", header=None, delimiter=';')
''' –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ –≥–ª–∞–≤–Ω—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º

–ü—É—Å—Ç—å –§ - –º–∞—Ç—Ä–∏—Ü–∞, —Å—Ç–æ–ª–±—Ü—ã –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–≤–µ—á–∞—é—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º 
–Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–µ–∫—Ç–æ—Ä–æ–≤ ‚Äì –≤–µ–∫—Ç–æ—Ä–æ–≤ –≤–µ—Å–æ–≤.

–¢–æ–≥–¥–∞: 

Z_[n x p] = F_[n x p] * –§_[p x p]

–∏ –º–∞—Ç—Ä–∏—Ü–∞ —Å—á–µ—Ç–æ–≤ –∏–º–µ–µ—Ç —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å [ùëõ √ó ùëù]. –¢–æ–≥–¥–∞ —Å—Ç–∞—Ä—ã–µ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –±–µ–∑ –≤—Å—è–∫–∏—Ö –ø–æ—Ç–µ—Ä—å –¥–æ–º–Ω–æ–∂–µ–Ω–∏–µ–º –≤—Å–µ–≥–æ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ 
—Å–ø—Ä–∞–≤–∞ –Ω–∞ –§T , –æ—Ç–∫—É–¥–∞:

Z*–§T = F*–§*–§T = F*E = F 

—Ç–∞–∫ –∫–∞–∫, –≤ —Å–∏–ª—É –æ—Ä—Ç–æ–≥–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –§,
–§*–§T = E ‚Äì –µ–¥–∏–Ω–∏—á–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞. 

–û–¥–Ω–∞–∫–æ –æ–±—ã—á–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ì–ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –æ—Å—Ç–∞–≤–ª—è–µ–º, 
–º–µ–Ω—å—à–µ, —á–µ–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞. 
–û—Å—Ç–∞–≤–∏–≤ –∏—Ö ùëò —à—Ç—É–∫, –ø–æ–ª—É—á–∏–º –º–∞—Ç—Ä–∏—Ü—É Œ¶ —Ä–∞–∑–º–µ—Ä–∞ [p x k] –∏ –≤–µ–∫—Ç–æ—Ä —Å—á—ë—Ç–æ–≤

Z_[n x k] = F_[n x p] * –§_[p x k]

—Ä–∞–∑–º–µ—Ä–∞ [n x k]. –î–æ–º–Ω–æ–∂–∏–º —Å–ø—Ä–∞–≤–∞ –Ω–∞  –§T –∏ –∑–∞–º–µ—Ç–∏–º, —á—Ç–æ —Ç–µ–ø–µ—Ä—å, —Ö–æ—Ç—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
–§*–§T –∏ –±—É–¥–µ—Ç –∏–º–µ—Ç—å —Ä–∞–∑–º–µ—Ä [p x p],–æ–Ω–æ –Ω–µ
–±—É–¥–µ—Ç –µ–¥–∏–Ω–∏—á–Ω–æ–π –º–∞—Ç—Ä–∏—Ü–µ–π. –ü–æ—ç—Ç–æ–º—É

ùëç * –§T = F * –§ * –§T = new_F,
new_F - –º–∞—Ç—Ä–∏—Ü–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏—Å—Ö–æ–¥–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.


–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–∏–±–∞–≤–∏—Ç—å —Å—Ä–µ–¥–Ω–µ–µ: 

new_F' = Z * –§T + X_mean

–í —ç—Ç–æ–π –∑–∞–¥–∞—á–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–∑—è—Ç—å —Ñ–æ—Ä–º—É–ª—É: 
new_F = Z * –§T

'''

print("Weight matrix : ")
print(weight_matrix)
print("Score matrix, transposed : ")
print(score_matrix.T)
new_F = np.dot(score_matrix, weight_matrix.T)
print("Resulting Matrix : ")
print(new_F)
plt.imshow(new_F, cmap="Blues")
plt.show()
